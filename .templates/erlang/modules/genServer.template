-module({{FILE}}).
-behaviour(gen_server).

%% api
-export([start_link/0]).

%% gen_server
-export([
	init/1,
	handle_call/3,
	handle_cast/2,
	handle_info/2,
	terminate/2,
	code_change/3
]).

-record(state, {
	
}).

-type state() :: #state{}.

%%%===================================================================
%%% api
%%%===================================================================

-spec start_link() -> {ok, pid()} | {error, {already_started, pid()}} | {error, Reason :: any()}.
start_link() ->
    gen_server:start_link({local, ?MODULE}, ?MODULE, [], []).

%%%===================================================================
%%% gen_server
%%%===================================================================

-spec init([]) -> {ok, state()}.
init([]) ->
	State = #state{},
	{ok, State}.

handle_call(_Request, _From, State) ->
	Reply = ok,
	{reply, Reply, State}.

handle_cast(_Msg, State) ->
	{noreply, State}.

handle_info(_Info, State) ->
	{noreply, State}.

terminate(_Reason, _State) ->
	ok.

code_change(_OldVsn, State, _Extra) ->
	{ok, State}.

%%%===================================================================
%%% gen_server_controller
%%%===================================================================

%%%===================================================================
%%% state api
%%%===================================================================

state() ->
    #state{}.

